syntax = "proto3";

option go_package = "grpc/game";
package online.niepowazni.poker;

enum MessageType {
  PING = 0;
  EVENT = 1;
}

enum GameEventType {
  NOOP = 0;
  STREET_UPDATE = 1;
  PLAYER_TO_ACT = 2;
  PLAYER_ACTED = 3;
  NEW_DEAL = 4;
}

enum PlayerActionType {
  CHECK = 0;
  FOLD = 1;
  BET = 2;
  CALL = 3;
}

enum GameActionResponseCode {
  OK = 0;
}

message PlayerAction {
  PlayerActionType actionType = 1;
  optional int64 value = 2;
}

message PlayerPossibleAction {
  PlayerActionType actionType = 1;
  optional int64 lowerBound = 3;
  optional int64 upperBound = 4;
}

message Event {
  MessageType metatype = 1;
  optional GameEvent eventData = 2;
}

message NewDealData {
  string smallBlindPlayer = 1;
  int64 smallBlindStack = 2;
  string bigBlindPlayer = 3;
  int64 bigBlindStack = 4;
  string buttonPlayer = 5;
  string underTheGunPlayer = 6;
  int64 stack = 7;
  int64 bigBlind = 8;
  int64 smallBlind = 9;
}

message GameEvent {
  GameEventType gameEventType = 1;
  repeated Card communityCards = 2;
  repeated PlayerPossibleAction possibleActions = 3;
  optional PlayerAction action = 4;
  optional NewDealData newDealData = 5;
}

message PokerGameHello {

}

message Card {
  string rank = 1;
  string suit = 2;
}

message GameAction {
  PlayerActionType type = 1;
}

message GameActionResponse {
  GameActionResponseCode code = 1;
  string description = 2;
}

service PokerGameService {
  rpc observeEvents(PokerGameHello) returns (stream Event);
  rpc perform(GameAction) returns (GameActionResponse);
}
